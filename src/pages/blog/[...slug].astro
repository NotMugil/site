---
import { type CollectionEntry, getCollection } from "astro:content";
import { Image } from "astro:assets";
import Drag from "@/components/animations/Drag.jsx";
import SlideIn from "@/components/animations/SlideIn.jsx";
import Blog from "@/layouts/Blog.astro";
import Navigation from "@/components/Navigation.astro";
import SeoPost from "@/components/SeoPost.astro";
import { formatDate, readingTime } from "@/lib/util";

interface Props {
  entry: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blog = await getCollection("blog");
  return blog.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const authors = await getCollection("authors");
const author = authors.find((user) => user.slug === entry.data.author);

if (!author) {
  console.warn(
    `Author data is not registered or slug doesn't exist for: ${entry.data.author}`,
  );
}

const readTime = readingTime(entry.body);
const { Content, headings } = await entry.render();
---

<Blog>
  <SeoPost slot="head" entry={entry} />
  <div class="grid h-full grid-cols-5">
    <div class="z-2 col-span-2 m-4 flex flex-col">
      <div class="sticky top-20">
        <h1 class="mt-3 py-2 text-2xl font-bold text-black dark:text-white">
          {entry.data.title}
        </h1>
        <div class="flex flex-col gap-2 text-gray-400">
          <p class="text-sm md:text-xs">{readTime}</p>
          <p class="text-sm md:text-xs">
            {formatDate(entry.data.publicationDate)}
          </p>
        </div>
        {
          author ? (
            <div class="mt-8 flex flex-col items-start gap-2">
              <Drag client:load>
                <div>
                  {author.data.avatar && (
                    <a href={`/authors/${author.slug}`}>
                      <Image
                        src={author.data.avatar}
                        alt={author.data.name || "undefined"}
                        width={34}
                        height={34}
                        draggable="false"
                        class="z-100 index-10 h-auto cursor-pointer rounded-md"
                      />
                    </a>
                  )}
                </div>
              </Drag>
              <div class="flex flex-col">
                <a
                  href={`/authors/${author.slug}`}
                  class="decor text-sm font-semibold text-gray-900 dark:text-gray-100"
                >
                  by{" "}
                  <span class="text-gray-600 dark:text-gray-400">
                    {" "}
                    @{author.data.name}{" "}
                  </span>
                </a>
              </div>
            </div>
          ) : (
            <div class="mt-8 flex flex-col items-start text-center">
              <div class="my-2 h-8 w-8 rounded-md bg-gray-200 dark:bg-gray-700" />
              <p class="text-sm font-semibold text-gray-900 dark:text-gray-100">
                Unknown Author
              </p>
              <p class="text-xs text-gray-500 dark:text-gray-400">
                This author is currently not listed in our records.
              </p>
            </div>
          )
        }
      </div>
    </div>
    <div class="col-span-3">
      <SlideIn client:load>
        <div class="flex flex-row">
          <article
            class="flex-l prose z-10 mx-auto w-full dark:prose dark:prose-dark lg:max-w-screen-md dark:text-white"
          >
            <Content />
          </article>
        </div>
      </SlideIn>
    </div>
  </div>
</Blog>
